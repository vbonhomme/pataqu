% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synchrony.R
\name{synchrony}
\alias{synchrony}
\alias{synchrony_pw}
\title{Test differences within temporal slices}
\usage{
synchrony(df, x = x_new, y = y, group = group, test_fun = kruskal_p)

synchrony_pw(df, x = x_new, y = y, group = group, test_fun = wilcox_p)
}
\arguments{
\item{df}{\code{\link[=tibble]{tibble()}} typically the result of \code{\link[=quake]{quake()}}}

\item{x, y, group}{colnames to use}

\item{test_fun}{function to pick among \code{\link[=synchrony_testers]{synchrony_testers()}}.
By default \code{kruskal_p}/\code{wilcox_p} for \code{synchrony}/\code{synchrony_pw}, respectively.}
}
\description{
Useful after \code{\link[=quake]{quake()}} to test "synchronic" differences between groups.
Within a temporal unit :
}
\details{
\itemize{
\item \code{synchrony} will test if at least one group differs from the others
\item \code{synchrony_pw} will test all pairwise differences between
groups present at that time.
}
}
\examples{
# for the sake of speed
mini_an_q <- animals_q \%>\% dplyr::filter(k<=5)

(an1 <- mini_an_q \%>\% synchrony(y=value, group=taxa))
# pairwise testing and using aov here
(an2 <- mini_an_q \%>\% synchrony_pw(y=value, group=taxa, test_fun=aov_p))

# you can easily filter where it differs with
alpha=1e-3
alpha_adj <- alpha/nrow(an1) # cheap Bonferroni correction
an1 \%>\% dplyr::filter(p < alpha_adj)

# you can also easily recreate group columns
tidyr::separate(an2, col=pw, into=c("group1", "group2"), sep=" ~ ", remove=FALSE)

# if your tibble have different names just mention them
mini_an_q \%>\%
  # rename to simulate different names
  dplyr::rename(species=taxa, year=x_new, measurement=value) \%>\%
  # you retain your names
  synchrony(year, measurement, species)

}
