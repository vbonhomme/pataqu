% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutter.R
\name{cutter}
\alias{cutter}
\alias{cutter_interval}
\alias{cutter_number}
\alias{cutter_width}
\alias{cutter_to_seq}
\title{Discretise numeric x values into categorical}
\usage{
cutter_interval(df, n, ...)

cutter_number(df, n, ...)

cutter_width(df, width, ...)

cutter_to_seq(x)
}
\arguments{
\item{df}{a \code{\link[=tibble]{tibble()}}}

\item{n}{number of intervals to create or the approximate number of observations}

\item{...}{colnames}

\item{width}{width of intervals to create}

\item{x}{a cutter on which to extract breaks}
}
\value{
factor with appropriate levels
}
\description{
Thin wrappers around \url{ggplot2::cut_interval()} and friends.
Useful for defining fixed x values for \link{fitting} functions.
}
\details{
Here, columns of interest may be passed directly.
If you want to cut directly on numeric vectors,
use \code{\link[base:cut]{base::cut()}} or \code{\link[ggplot2:cut_interval]{ggplot2::cut_interval()}} and friends.
}
\section{Functions}{
\itemize{
\item \code{cutter_interval}: makes groups with equal range

\item \code{cutter_number}: makes n groups with approximately equal numbers of observations

\item \code{cutter_width}: makes groups of a certain width

\item \code{cutter_to_seq}: extract breaks from a cutter factor
}}

\examples{

cutter_interval(animals, 30, tpq, taq) \%>\% table()
cutter_number(animals, 10, tpq, taq,) \%>\% table()
cutter_width(animals, 30, tpq, taq) \%>\% table()

# # note that in x_cut_number above, we have many observations yet
# the number of _different_ levels is not so diverse,
# so that n=30 would fail with "Insufficient data values"
# unlist(animals[, c("tpq", "taq")]) \%>\% table()
}
